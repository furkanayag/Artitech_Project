{"ast":null,"code":"import { memo } from '../../../utils/memo.mjs';\nimport { scrollInfo } from './track.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\nfunction scrollTimelineFallback(_ref) {\n  let {\n    source,\n    axis = \"y\"\n  } = _ref;\n  // ScrollTimeline records progress as a percentage CSSUnitValue\n  const currentTime = {\n    value: 0\n  };\n  const cancel = scrollInfo(info => {\n    currentTime.value = info[axis].progress * 100;\n  }, {\n    container: source,\n    axis\n  });\n  return {\n    currentTime,\n    cancel\n  };\n}\nconst timelineCache = new Map();\nfunction getTimeline() {\n  let {\n    source = document.documentElement,\n    axis = \"y\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!timelineCache.has(source)) {\n    timelineCache.set(source, {});\n  }\n  const elementCache = timelineCache.get(source);\n  if (!elementCache[axis]) {\n    elementCache[axis] = supportsScrollTimeline() ? new ScrollTimeline({\n      source,\n      axis\n    }) : scrollTimelineFallback({\n      source,\n      axis\n    });\n  }\n  return elementCache[axis];\n}\nfunction scroll(onScroll, options) {\n  const timeline = getTimeline(options);\n  let prevProgress;\n  const onFrame = () => {\n    const {\n      currentTime\n    } = timeline;\n    const percentage = currentTime === null ? 0 : currentTime.value;\n    const progress = percentage / 100;\n    if (prevProgress !== progress) {\n      onScroll(progress);\n    }\n    prevProgress = progress;\n  };\n  frame.update(onFrame, true);\n  return () => {\n    cancelFrame(onFrame);\n    if (timeline.cancel) timeline.cancel();\n  };\n}\nexport { scroll };","map":{"version":3,"names":["memo","scrollInfo","frame","cancelFrame","supportsScrollTimeline","window","ScrollTimeline","undefined","scrollTimelineFallback","_ref","source","axis","currentTime","value","cancel","info","progress","container","timelineCache","Map","getTimeline","document","documentElement","arguments","length","has","set","elementCache","get","scroll","onScroll","options","timeline","prevProgress","onFrame","percentage","update"],"sources":["/Users/furkan/Desktop/Artitech/projectfiles/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs"],"sourcesContent":["import { memo } from '../../../utils/memo.mjs';\nimport { scrollInfo } from './track.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\nfunction scrollTimelineFallback({ source, axis = \"y\" }) {\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container: source, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source = document.documentElement, axis = \"y\", } = {}) {\n    if (!timelineCache.has(source)) {\n        timelineCache.set(source, {});\n    }\n    const elementCache = timelineCache.get(source);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source, axis })\n            : scrollTimelineFallback({ source, axis });\n    }\n    return elementCache[axis];\n}\nfunction scroll(onScroll, options) {\n    const timeline = getTimeline(options);\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            onScroll(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => {\n        cancelFrame(onFrame);\n        if (timeline.cancel)\n            timeline.cancel();\n    };\n}\n\nexport { scroll };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,KAAK,EAAEC,WAAW,QAAQ,8BAA8B;AAEjE,MAAMC,sBAAsB,GAAGJ,IAAI,CAAC,MAAMK,MAAM,CAACC,cAAc,KAAKC,SAAS,CAAC;AAC9E,SAASC,sBAAsBA,CAAAC,IAAA,EAAyB;EAAA,IAAxB;IAAEC,MAAM;IAAEC,IAAI,GAAG;EAAI,CAAC,GAAAF,IAAA;EAClD;EACA,MAAMG,WAAW,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC;EAChC,MAAMC,MAAM,GAAGb,UAAU,CAAEc,IAAI,IAAK;IAChCH,WAAW,CAACC,KAAK,GAAGE,IAAI,CAACJ,IAAI,CAAC,CAACK,QAAQ,GAAG,GAAG;EACjD,CAAC,EAAE;IAAEC,SAAS,EAAEP,MAAM;IAAEC;EAAK,CAAC,CAAC;EAC/B,OAAO;IAAEC,WAAW;IAAEE;EAAO,CAAC;AAClC;AACA,MAAMI,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC/B,SAASC,WAAWA,CAAA,EAA0D;EAAA,IAAzD;IAAEV,MAAM,GAAGW,QAAQ,CAACC,eAAe;IAAEX,IAAI,GAAG;EAAK,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAhB,SAAA,GAAAgB,SAAA,MAAG,CAAC,CAAC;EACxE,IAAI,CAACL,aAAa,CAACO,GAAG,CAACf,MAAM,CAAC,EAAE;IAC5BQ,aAAa,CAACQ,GAAG,CAAChB,MAAM,EAAE,CAAC,CAAC,CAAC;EACjC;EACA,MAAMiB,YAAY,GAAGT,aAAa,CAACU,GAAG,CAAClB,MAAM,CAAC;EAC9C,IAAI,CAACiB,YAAY,CAAChB,IAAI,CAAC,EAAE;IACrBgB,YAAY,CAAChB,IAAI,CAAC,GAAGP,sBAAsB,CAAC,CAAC,GACvC,IAAIE,cAAc,CAAC;MAAEI,MAAM;MAAEC;IAAK,CAAC,CAAC,GACpCH,sBAAsB,CAAC;MAAEE,MAAM;MAAEC;IAAK,CAAC,CAAC;EAClD;EACA,OAAOgB,YAAY,CAAChB,IAAI,CAAC;AAC7B;AACA,SAASkB,MAAMA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAC/B,MAAMC,QAAQ,GAAGZ,WAAW,CAACW,OAAO,CAAC;EACrC,IAAIE,YAAY;EAChB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAM;MAAEtB;IAAY,CAAC,GAAGoB,QAAQ;IAChC,MAAMG,UAAU,GAAGvB,WAAW,KAAK,IAAI,GAAG,CAAC,GAAGA,WAAW,CAACC,KAAK;IAC/D,MAAMG,QAAQ,GAAGmB,UAAU,GAAG,GAAG;IACjC,IAAIF,YAAY,KAAKjB,QAAQ,EAAE;MAC3Bc,QAAQ,CAACd,QAAQ,CAAC;IACtB;IACAiB,YAAY,GAAGjB,QAAQ;EAC3B,CAAC;EACDd,KAAK,CAACkC,MAAM,CAACF,OAAO,EAAE,IAAI,CAAC;EAC3B,OAAO,MAAM;IACT/B,WAAW,CAAC+B,OAAO,CAAC;IACpB,IAAIF,QAAQ,CAAClB,MAAM,EACfkB,QAAQ,CAAClB,MAAM,CAAC,CAAC;EACzB,CAAC;AACL;AAEA,SAASe,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}